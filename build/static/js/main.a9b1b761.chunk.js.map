{"version":3,"sources":["components/ResultsSelector.js","components/IssueDetails.js","components/IssueViewer.js","App.js","serviceWorker.js","index.js"],"names":["ResultsSelector","createIssueTitles","issuesJson","map","issue","react_default","a","createElement","className","key","id","Link","to","concat","title","this","props","issues","length","message","React","Component","IssueDetails","makeLabels","labels","label","name","style","backgroundColor","color","makeIssueDetail","Fragment","lib_default","text","_this","href","html_url","user","login","author_association","toLowerCase","body","IssueViewer","Route","exact","path","render","_ref","match","components_IssueDetails","find","i","params","issueId","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","baseUri","issuesUri","fetchNewProject","url","fetch","then","response","console","log","status","setState","Error","json","analyzeIssues","catch","error","getComments","withComments","state","filter","comments","commentUrls","forEach","comments_url","keys","resetRepo","repo","changeUrl","updateRepo","_this2","BrowserRouter","type","placeholder","value","onChange","e","target","onClick","components_ResultsSelector","components_IssueViewer","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a9b1b761.chunk.js","sourcesContent":["import React from 'react' \nimport { Link } from 'react-router-dom'\n\nimport './styles/ResultsSelector.css'\n\nclass ResultsSelector extends React.Component {\n  createIssueTitles = issuesJson => {\n    return issuesJson.map( issue => {\n      return (\n        <div className=\"issue-title-card\" key={issue.id}>\n          <Link to={`/issue/${issue.id}`}>\n          <p>\n            {issue.title}\n          </p>\n          </Link>\n        </div>\n      )\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"results-selector\">\n        { this.props.issues.length > 0 ? \n            this.createIssueTitles(this.props.issues)\n          :\n            <p>{this.props.message}</p>\n        }\n      </div>\n    )\n  }\n}\n\nexport default ResultsSelector","import React from 'react'\nimport MDReactComponent from 'markdown-react-js'\n\nimport './styles/IssueDetails.css' \n\nclass IssueDetails extends React.Component {\n  makeLabels = labels => {\n    return labels.map( label => {\n      return (\n        <div className=\"label-badge\" key={label.name} style={ {backgroundColor: `#${label.color}` }}>\n          <p>{label.name}</p>\n        </div>\n      )\n    })\n  }\n  \n  makeIssueDetail = issue => {\n    return (\n      <>\n      <h1>\n        <MDReactComponent text={issue.title} />\n      </h1>\n      <div className=\"labels-container\">\n        {this.makeLabels(issue.labels)}\n      </div>\n      <br />\n      <a href={issue.html_url}>\n        See issue on Github\n      </a>\n      <p>Opened by <a href={issue.user.html_url}>{issue.user.login}</a> {issue.author_association !== 'NONE' ? (`(${issue.author_association.toLowerCase()})`) : null}</p>\n      <div className=\"issue-body\">\n        <MDReactComponent text={issue.body} />\n      </div>\n      \n      </>\n    )\n  }\n\n  render() {\n    return (\n      this.props.issue ? \n      this.makeIssueDetail(this.props.issue) :\n      (<p>No issue found.</p>)\n    )\n  }\n}\n\nexport default IssueDetails","import React from 'react'\nimport { Route } from 'react-router-dom'\n\nimport IssueDetails from './IssueDetails'\n\nimport './styles/IssueViewer.css'\n\nclass IssueViewer extends React.Component {\n  render() {\n    return (\n      <div className=\"issue-viewer-container\">\n        <Route exact={true} path=\"/\" render={() => (\n          <p>Please select an issue.</p>\n        )}></Route>\n\n        <Route path='/issue/:issueId' render={\n          ({ match }) => {\n            return (\n              <IssueDetails issue={this.props.issues.find( i => {\n                return `${i.id}` === match.params.issueId\n              })} />\n            )\n          }\n        } />\n      </div>\n    )\n  }\n}\n\nexport default IssueViewer","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Link } from 'react-router-dom'\nimport './App.css';\n\nimport ResultsSelector from './components/ResultsSelector';\nimport IssueViewer from './components/IssueViewer';\n\nclass App extends Component {\n  constructor(props) {\n    super(props) \n    this.state = {\n      issues: [],\n      comments: {},\n      repo: 'rails/rails',\n      message: 'Loading, please wait...'\n    }\n  }\n\n  baseUri = 'https://api.github.com/repos/'\n  issuesUri = '/issues?page=1&per_page=100'\n\n  componentDidMount() {\n    this.fetchNewProject(`${this.baseUri}${this.state.repo}${this.issuesUri}`)\n  }\n\n  fetchNewProject = url => {\n    fetch(url)\n    .then( response => {\n      console.log('status:', response.status)\n      if (response.status === 403) {\n        this.setState({ message: \"Rate limited by GitHub, please try again later.\" }, () => {\n          throw new Error(\"Rate limited by GitHub.\")\n        })\n      }\n      return response.json()\n    })\n    .then( issues => {\n      this.analyzeIssues(issues)\n    })\n    .catch(function(error) {\n      console.log(error)\n    });\n  }\n\n  getComments = () => {\n    const withComments = this.state.issues.filter( issue => issue.comments)\n    const commentUrls = {} \n    withComments.forEach( issue => {\n      commentUrls[issue.id] = issue.comments_url\n    })\n\n    Object.keys(commentUrls).forEach( id => {\n      fetch(commentUrls[id])\n      .then(response => response.json())\n      .then( comments => {\n        \n      })\n    })\n  }\n\n  analyzeIssues = issues => {\n    if (issues.length) {\n      this.setState({ issues })\n    } else {\n      this.resetRepo()\n    }\n  }\n\n  resetRepo = () => {\n    this.setState({ repo: 'rails/rails' }, this.changeUrl(this.state.repo))\n  }\n\n  changeUrl = repo => {\n    this.fetchNewProject(`${this.baseUri}${repo}${this.issuesUri}`)\n  }\n\n  updateRepo = repo => {\n    this.setState({ repo })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <>\n          <div className=\"nav\">\n            <Link to=\"/\" className=\"home-button\">Home</Link>\n            <div className=\"url-input-form\">\n              <input \n                type=\"text\" \n                placeholder=\"e.g. 'rails/rails'\" \n                value={this.state.repo} \n                onChange={(e) => this.updateRepo(e.target.value)}\n                className=\"repo-input\"\n              />\n              <button onClick={() => this.changeUrl(this.state.repo)}>Update Repo</button>\n            </div>\n          </div>\n          <div className=\"issue-app-container\">\n            <ResultsSelector issues={this.state.issues} message={this.state.message} />\n            <IssueViewer issues={this.state.issues} />\n          </div>\n          </>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}